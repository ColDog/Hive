%ul.nav.nav-tabs{ role: 'tablist' }
  %li{ role: 'presentation', class: (params[:tab] == 'search' or params[:tab].nil? or params[:tab] == '') ? 'active' : '' }
    %a{ href: '#search', 'aria-controls' => 'search', role: 'tab', 'data-toggle' => 'tab' } View
  %li{ role: 'presentation', class: params[:tab] == 'add' ? 'active' : '' }
    %a{ href: '#add', 'aria-controls' => 'add', role: 'tab', 'data-toggle' => 'tab' } Add
  %li{ role: 'presentation', class: params[:tab] == 'load' ? 'active' : '' }
    %a{ href: '#load', 'aria-controls' => 'load', role: 'tab', 'data-toggle' => 'tab' } Upload/Download

%div.tab-content
  %div.tab-pane#search{ role: 'tabpanel', class: (params[:tab] == 'search' or params[:tab].nil? or params[:tab] == '') ? 'active' : '' }
    %br
    = render 'admin/supplies/search'
    %div
      %table.table
        %thead
          %tr
            %th Name
            %th Owner Type
            %th Owner Name
            %th Notes
            %th Add Owner
            %th Actions
        - cache(SupplyList.cache_key(params, search: true)) do
          - @supply_lists.each do |list|
            - cache(list) do
              %tr
                %td
                  = list.name
                %td
                  = list.type
                %td
                  = list.owner.name if list.owner
                %td
                  = list.notes
                %td
                  = form_tag admin_supply_lists_add_owner_path, method: :post do
                    = hidden_field_tag :id, list.id
                    %div.addForm
                %td
                  = link_to 'delete', admin_supply_list_path(list), method: :delete
                  = link_to 'remove', admin_supply_lists_remove_owner_path(list), method: :post

  %div.tab-pane#add{ role: 'tabpanel', class: params[:tab] == 'add' ? 'active' : '' }
    %br
    %h4 Create New Supply Item
    = form_for :supply_list, url: admin_supply_lists_path, method: :post do |f|
      = f.text_field :name, placeholder: 'name', class: 'form-control short-form'
      = f.hidden_field :supply_id, value: variable.id
      = f.text_field :notes, placeholder: 'notes', class: 'form-control short-form'
      = f.submit 'Submit', class: 'btn btn-primary', data: { disable_with: 'processing...' }
    %br
    %h4 Add Owner to Supply Item
    = form_tag admin_supply_lists_add_owner_path, method: :post do
      = select_tag :id, options_from_collection_for_select(variable.supply_lists, :id, :name), {include_blank: 'Supply Item', class: 'short-form form-control'}
      = select_tag :user_id, options_from_collection_for_select(User.all.order(:name), :id, :name), {include_blank: 'Add User', class: 'short-form form-control'}
      = select_tag :organization_id, options_from_collection_for_select(Organization.all.order(:name), :id, :name), {include_blank: 'Add Organization', class: 'short-form form-control'}
      = text_field_tag :notes, '', placeholder: 'notes', class: 'form-control short-form'
      = submit_tag 'Add', class: 'btn btn-primary'

  %div.tab-pane#load{ role: 'tabpanel', class: params[:tab] == 'load' ? 'active' : '' }
    %br
    %div
      %h4
        = link_to 'Download', admin_supply_lists_download_path(variable, format: :csv)
      %br
      %h4 Upload Csv
      %p Make sure that your column heading on your spreadsheet (the first row), match the one's below. Try downloading by clicking above to see what it should look like. If you download a file and re-upload it, changed records will be updated as long as the ID remains. Don't put an ID for new records. Only ID and name are required.
      %pre
        %code
          ~ 'id,name,notes'
      = form_tag admin_supply_lists_upload_path(variable.id), method: :post, multipart: true, class: 'form-inline' do
        = file_field_tag :file
        %br
        = submit_tag 'Upload', class: 'btn btn-primary btn-sm'
    - if flash['results']
      %h4 Successful Updates (name of record)
      %ul
        - flash['results']['successes'].each do |success|
          %li
            = success
      %h4 Errors (name of record: error message)
      %ul
        - flash['results']['errors'].each do |name, error|
          %li
            = "#{name}: #{error}"
= render 'admin/supplies/js'